/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package connectme;

import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.Insets;
import java.awt.List;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sachitha
 */
public class Dashboard extends javax.swing.JFrame {

    /**
     * Creates new form Dashboard
     */
    private String userRole;

    public Dashboard(String role) {
        this.userRole = role;
        initComponents();
        this.setExtendedState(javax.swing.JFrame.MAXIMIZED_BOTH);
        this.setLocationRelativeTo(null);

        // Hide manager-only buttons if assistant
        if (userRole.equals("HR Assistant")) {
            addDepartmentBtn.setVisible(false);
            addDesignationBtn.setVisible(false);
            createAssistantAccBtn.setVisible(false);
        }
        this.setExtendedState(javax.swing.JFrame.MAXIMIZED_BOTH); // Maximize window
        this.setLocationRelativeTo(null); // Optional: center if windowed
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        addEmployeeBtn = new javax.swing.JButton();
        searchEmployeeBtn = new javax.swing.JButton();
        viewAllEmployeesBtn = new javax.swing.JButton();
        addDepartmentBtn = new javax.swing.JButton();
        addDesignationBtn = new javax.swing.JButton();
        createAssistantAccBtn = new javax.swing.JButton();
        logoutBtn = new javax.swing.JButton();
        jPanelContent = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setPreferredSize(new java.awt.Dimension(250, 0));

        addEmployeeBtn.setText("Add Employee");
        addEmployeeBtn.setPreferredSize(new java.awt.Dimension(200, 30));
        addEmployeeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addEmployeeBtnActionPerformed(evt);
            }
        });
        jPanel1.add(addEmployeeBtn);

        searchEmployeeBtn.setText("Search Employee");
        searchEmployeeBtn.setPreferredSize(new java.awt.Dimension(200, 30));
        searchEmployeeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchEmployeeBtnActionPerformed(evt);
            }
        });
        jPanel1.add(searchEmployeeBtn);

        viewAllEmployeesBtn.setText("View All Employees  ");
        viewAllEmployeesBtn.setPreferredSize(new java.awt.Dimension(200, 30));
        viewAllEmployeesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAllEmployeesBtnActionPerformed(evt);
            }
        });
        jPanel1.add(viewAllEmployeesBtn);

        addDepartmentBtn.setText("Add Department  ");
        addDepartmentBtn.setPreferredSize(new java.awt.Dimension(200, 30));
        addDepartmentBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDepartmentBtnActionPerformed(evt);
            }
        });
        jPanel1.add(addDepartmentBtn);

        addDesignationBtn.setText("Add Designation  ");
        addDesignationBtn.setPreferredSize(new java.awt.Dimension(200, 30));
        addDesignationBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDesignationBtnActionPerformed(evt);
            }
        });
        jPanel1.add(addDesignationBtn);

        createAssistantAccBtn.setText("Create Assistant Account  ");
        createAssistantAccBtn.setPreferredSize(new java.awt.Dimension(200, 30));
        createAssistantAccBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createAssistantAccBtnActionPerformed(evt);
            }
        });
        jPanel1.add(createAssistantAccBtn);

        logoutBtn.setText("Logout");
        logoutBtn.setPreferredSize(new java.awt.Dimension(200, 30));
        logoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutBtnActionPerformed(evt);
            }
        });
        jPanel1.add(logoutBtn);

        getContentPane().add(jPanel1, java.awt.BorderLayout.WEST);

        jPanelContent.setBackground(new java.awt.Color(255, 255, 255));
        jPanelContent.setLayout(new javax.swing.OverlayLayout(jPanelContent));
        getContentPane().add(jPanelContent, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addEmployeeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addEmployeeBtnActionPerformed
        // TODO add your handling code here:
        setContent(getAddEmployeePanel());
    }//GEN-LAST:event_addEmployeeBtnActionPerformed

    private void viewAllEmployeesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAllEmployeesBtnActionPerformed
        setContent(getViewAllEmployeesPanel());        // TODO add your handling code here:
    }//GEN-LAST:event_viewAllEmployeesBtnActionPerformed

    private void searchEmployeeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchEmployeeBtnActionPerformed
        setContent(getSearchEmployeePanel());        // TODO add your handling code here:
    }//GEN-LAST:event_searchEmployeeBtnActionPerformed

    private void addDepartmentBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDepartmentBtnActionPerformed
        setContent(getAddDepartmentPanel());
        // TODO add your handling code here:
    }//GEN-LAST:event_addDepartmentBtnActionPerformed

    private void addDesignationBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDesignationBtnActionPerformed
        setContent(getAddDesignationPanel());        // TODO add your handling code here:
    }//GEN-LAST:event_addDesignationBtnActionPerformed

    private void createAssistantAccBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createAssistantAccBtnActionPerformed
        setContent(getCreateAssistantPanel());        // TODO add your handling code here:
    }//GEN-LAST:event_createAssistantAccBtnActionPerformed

    private void logoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutBtnActionPerformed

        // Dispose the current Dashboard window
        this.dispose();  // Close the Dashboard window

        // Show the Login screen again
        new Login().setVisible(true);
    }//GEN-LAST:event_logoutBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dashboard("default rol").setVisible(true);
            }
        });
    }

    void setContent(JPanel panel) {
        jPanelContent.removeAll();
        jPanelContent.add(panel);
        jPanelContent.revalidate();
        jPanelContent.repaint();
    }

    JPanel getSearchEmployeePanel() {
        JPanel panel = new JPanel(new BorderLayout(10, 10));

        // Top panel with label + search field + button
        JPanel searchPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));

        JLabel lblSearch = new JLabel("Search by Name or ID:");
        JTextField txtSearch = new JTextField(20);
        JButton btnSearch = new JButton("Search");

        searchPanel.add(lblSearch);
        searchPanel.add(txtSearch);
        searchPanel.add(btnSearch);

        // Table to display results
        String[] columns = {"Employee ID", "Full Name", "Department", "Designation", "Date Joined"};
        String[][] data = {}; // Initially empty

        JTable table = new JTable(data, columns);
        JScrollPane scrollPane = new JScrollPane(table);

        // Add components to main panel
        panel.add(searchPanel, BorderLayout.NORTH);
        panel.add(scrollPane, BorderLayout.CENTER);

        // Search logic (dummy version)
        btnSearch.addActionListener(e -> {
            String keyword = txtSearch.getText().trim();
            if (!keyword.isEmpty()) {
                // Replace this with file-based or database search later
                String[][] employeeData = loadEmployeeDataFromFile();

                // Example: Filter by keyword match (very basic)
                DefaultTableModel model = new DefaultTableModel(columns, 0);
                for (String[] row : employeeData) {
                    if (row[0].contains(keyword) || row[1].toLowerCase().contains(keyword.toLowerCase())) {
                        model.addRow(row);
                    }
                }
                table.setModel(model);
            }
        });

        return panel;
    }

    JPanel getViewAllEmployeesPanel() {
        JPanel panel = new JPanel(new BorderLayout(10, 10));

        JLabel heading = new JLabel("All Employees", JLabel.CENTER);
        heading.setFont(new Font("Arial", Font.BOLD, 16));
        panel.add(heading, BorderLayout.NORTH);

        // Table columns
        String[] columns = {"Employee ID", "Full Name", "Department", "Designation", "Date Joined"};
        DefaultTableModel model = new DefaultTableModel(columns, 0);
        JTable table = new JTable(model);
        JScrollPane scrollPane = new JScrollPane(table);

        // Read from file and populate table
        try {
            File file = new File("employees.txt");
            if (file.exists()) {
                BufferedReader reader = new BufferedReader(new FileReader(file));
                String line;
                while ((line = reader.readLine()) != null) {
                    String[] data = line.split(",");
                    if (data.length == 5) {
                        model.addRow(data);
                    }
                }
                reader.close();
            } else {
                JOptionPane.showMessageDialog(this, "No employee records found.", "File Missing", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error reading file: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

        panel.add(scrollPane, BorderLayout.CENTER);
        return panel;
    }

    JPanel getAddEmployeePanel() {
        JPanel panel = new JPanel(new GridBagLayout());
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.insets = new Insets(10, 10, 10, 10); // Padding around components
        gbc.fill = GridBagConstraints.HORIZONTAL;

        // Components
        JLabel lblName = new JLabel("Full Name:");
        JTextField txtName = new JTextField(20);

        JLabel lblDept = new JLabel("Department:");
        JComboBox<String> cmbDept = new JComboBox<>(loadDepartments());

        JLabel lblDesig = new JLabel("Designation:");
        JComboBox<String> cmbDesig = new JComboBox<>(loadDesignations());

        JLabel lblEmpId = new JLabel("Employee ID:");
        JTextField txtEmpId = new JTextField(20);

        JLabel lblDate = new JLabel("Date Joined:");
        JTextField txtDate = new JTextField("yyyy-mm-dd");

        JButton btnSave = new JButton("Save");

        btnSave.addActionListener(e -> {
            String name = txtName.getText().trim();
            String dept = (String) cmbDept.getSelectedItem();
            String desig = (String) cmbDesig.getSelectedItem();
            String empId = txtEmpId.getText().trim();
            String date = txtDate.getText().trim();

            // Basic validation
            if (name.isEmpty() || empId.isEmpty() || date.isEmpty()) {
                JOptionPane.showMessageDialog(panel, "Please fill all required fields!", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }

            // Format: EMPID,FullName,Department,Designation,Date
            String record = empId + "," + name + "," + dept + "," + desig + "," + date;

            try (FileWriter fw = new FileWriter("employees.txt", true); BufferedWriter bw = new BufferedWriter(fw); PrintWriter out = new PrintWriter(bw)) {

                out.println(record);
                JOptionPane.showMessageDialog(panel, "Employee saved successfully!");

                // Optionally clear fields
                txtName.setText("");
                txtEmpId.setText("");
                txtDate.setText("");

            } catch (IOException ex) {
                JOptionPane.showMessageDialog(panel, "Error saving employee: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        });

        // Add components to panel
        gbc.gridx = 0;
        gbc.gridy = 0;
        panel.add(lblName, gbc);
        gbc.gridx = 1;
        panel.add(txtName, gbc);

        gbc.gridx = 0;
        gbc.gridy = 1;
        panel.add(lblDept, gbc);
        gbc.gridx = 1;
        panel.add(cmbDept, gbc);

        gbc.gridx = 0;
        gbc.gridy = 2;
        panel.add(lblDesig, gbc);
        gbc.gridx = 1;
        panel.add(cmbDesig, gbc);

        gbc.gridx = 0;
        gbc.gridy = 3;
        panel.add(lblEmpId, gbc);
        gbc.gridx = 1;
        panel.add(txtEmpId, gbc);

        gbc.gridx = 0;
        gbc.gridy = 4;
        panel.add(lblDate, gbc);
        gbc.gridx = 1;
        panel.add(txtDate, gbc);

        gbc.gridx = 1;
        gbc.gridy = 5;
        gbc.anchor = GridBagConstraints.CENTER;
        panel.add(btnSave, gbc);

        return panel;
    }

    private String[] loadDepartments() {
        var departments = new ArrayList<String>();

        try {
            BufferedReader reader = new BufferedReader(new FileReader("departments.txt"));
            String line;
            while ((line = reader.readLine()) != null) {
                departments.add(line);
            }
            reader.close();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error reading departments file.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        return departments.toArray(new String[0]);  // Convert List to array
    }

    private String[] loadDesignations() {
        var designations = new ArrayList<String>();
        try {
            BufferedReader reader = new BufferedReader(new FileReader("designations.txt"));
            String line;
            while ((line = reader.readLine()) != null) {
                designations.add(line);
            }
            reader.close();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error reading designations file.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        return designations.toArray(new String[0]);  // Convert List to array
    }

    private String[][] loadEmployeeDataFromFile() {
        String[][] employeeData = new String[0][5]; // Initialize empty 2D array
        try {
            File file = new File("employees.txt");
            if (file.exists()) {
                BufferedReader reader = new BufferedReader(new FileReader(file));
                String line;
                var employeeList = new ArrayList<String[]>();  // Using var here
                while ((line = reader.readLine()) != null) {
                    String[] data = line.split(",");
                    if (data.length == 5) {
                        employeeList.add(data);
                    }
                }
                reader.close();

                // Convert List to 2D array
                employeeData = new String[employeeList.size()][5];
                for (int i = 0; i < employeeList.size(); i++) {
                    employeeData[i] = employeeList.get(i);
                }
            } else {
                JOptionPane.showMessageDialog(this, "No employee records found.", "File Missing", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error reading employee file: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

        return employeeData;
    }

    JPanel getAddDepartmentPanel() {
        JPanel panel = new JPanel(new GridBagLayout());
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.insets = new Insets(10, 10, 10, 10);
        gbc.fill = GridBagConstraints.HORIZONTAL;

        JLabel lblDeptName = new JLabel("Department Name:");
        JTextField txtDeptName = new JTextField(20);
        JButton btnSave = new JButton("Save");

        // Layout
        gbc.gridx = 0;
        gbc.gridy = 0;
        panel.add(lblDeptName, gbc);

        gbc.gridx = 1;
        panel.add(txtDeptName, gbc);

        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.CENTER;
        panel.add(btnSave, gbc);

        // Save logic
        btnSave.addActionListener(e -> {
            String deptName = txtDeptName.getText().trim();
            if (deptName.isEmpty()) {
                JOptionPane.showMessageDialog(panel, "Please enter a department name!", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }

            try (FileWriter fw = new FileWriter("departments.txt", true); BufferedWriter bw = new BufferedWriter(fw); PrintWriter out = new PrintWriter(bw)) {

                out.println(deptName);
                JOptionPane.showMessageDialog(panel, "Department saved!");
                txtDeptName.setText("");

            } catch (IOException ex) {
                JOptionPane.showMessageDialog(panel, "Error saving department: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        });

        return panel;
    }

    JPanel getAddDesignationPanel() {
        JPanel panel = new JPanel(new GridBagLayout());
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.insets = new Insets(10, 10, 10, 10);
        gbc.fill = GridBagConstraints.HORIZONTAL;

        JLabel lblDesigName = new JLabel("Designation Name:");
        JTextField txtDesigName = new JTextField(20);
        JButton btnSave = new JButton("Save");

        // Layout
        gbc.gridx = 0;
        gbc.gridy = 0;
        panel.add(lblDesigName, gbc);

        gbc.gridx = 1;
        panel.add(txtDesigName, gbc);

        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.CENTER;
        panel.add(btnSave, gbc);

        // Save logic
        btnSave.addActionListener(e -> {
            String desigName = txtDesigName.getText().trim();
            if (desigName.isEmpty()) {
                JOptionPane.showMessageDialog(panel, "Please enter a designation name!", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }

            try (FileWriter fw = new FileWriter("designations.txt", true); BufferedWriter bw = new BufferedWriter(fw); PrintWriter out = new PrintWriter(bw)) {

                out.println(desigName);
                JOptionPane.showMessageDialog(panel, "Designation saved!");
                txtDesigName.setText("");

            } catch (IOException ex) {
                JOptionPane.showMessageDialog(panel, "Error saving designation: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        });

        return panel;
    }

    JPanel getCreateAssistantPanel() {
        JPanel panel = new JPanel(new GridBagLayout());
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.insets = new Insets(10, 10, 10, 10);
        gbc.fill = GridBagConstraints.HORIZONTAL;

        JLabel lblUsername = new JLabel("Assistant Username:");
        JTextField txtUsername = new JTextField(20);

        JLabel lblPassword = new JLabel("Password:");
        JPasswordField txtPassword = new JPasswordField(20);

        JButton btnSave = new JButton("Create Account");

        // Layout
        gbc.gridx = 0;
        gbc.gridy = 0;
        panel.add(lblUsername, gbc);
        gbc.gridx = 1;
        panel.add(txtUsername, gbc);

        gbc.gridx = 0;
        gbc.gridy = 1;
        panel.add(lblPassword, gbc);
        gbc.gridx = 1;
        panel.add(txtPassword, gbc);

        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.CENTER;
        panel.add(btnSave, gbc);

        // Save logic
        btnSave.addActionListener(e -> {
            String username = txtUsername.getText().trim();
            String password = new String(txtPassword.getPassword()).trim();

            if (username.isEmpty() || password.isEmpty()) {
                JOptionPane.showMessageDialog(panel, "Please fill all fields!", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }

            try (FileWriter fw = new FileWriter("users.txt", true); BufferedWriter bw = new BufferedWriter(fw); PrintWriter out = new PrintWriter(bw)) {

                out.println(username + "," + password);
                JOptionPane.showMessageDialog(panel, "Assistant account created!");
                txtUsername.setText("");
                txtPassword.setText("");

            } catch (IOException ex) {
                JOptionPane.showMessageDialog(panel, "Error saving account: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        });

        return panel;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addDepartmentBtn;
    private javax.swing.JButton addDesignationBtn;
    private javax.swing.JButton addEmployeeBtn;
    private javax.swing.JButton createAssistantAccBtn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelContent;
    private javax.swing.JButton logoutBtn;
    private javax.swing.JButton searchEmployeeBtn;
    private javax.swing.JButton viewAllEmployeesBtn;
    // End of variables declaration//GEN-END:variables
}
